import 'package:flutter/material.dart';
import 'package:tism/constants/colors.dart';
import 'package:tism/services/secure_storage_service.dart';
import 'dart:math';
import 'package:tism/views/feed/feed_page.dart';
import 'package:tism/views/profile/profile_page.dart';
import 'package:tism/views/chatbot/chat_screen.dart';
import 'package:tism/views/routine/routine_screen.dart';
import 'package:tism/views/diary/diary_screen.dart';
import 'package:tism/views/forum/forum_main.dart';

class HomePage extends StatefulWidget {
  final String nomeUsuario;

  const HomePage({super.key, required this.nomeUsuario});

  @override
  State<HomePage> createState() => _HomePageState();
}

class _HomePageState extends State<HomePage> {
  String _displayName = '';
  String _motivationalPhrase = '';
  
  final List<String> _phrases = [
    'Explore conte√∫dos educativos sobre o TEA',
    'Descubra recursos para apoiar o desenvolvimento',
    'Conecte-se com informa√ß√µes especializadas',
    'Acesse ferramentas para o dia a dia',
    'Encontre suporte e orienta√ß√£o personalizada', 
    'Navegue por conte√∫dos baseados em evid√™ncias',
    'Construa rotinas adaptadas √†s necessidades',
    'Cada pessoa com TEA √© √∫nica e especial',
    'Desenvolva habilidades no seu pr√≥prio ritmo',
    'Celebre cada pequena conquista',
    'A jornada do TEA √© √∫nica para cada fam√≠lia',
    'Conhecimento √© a chave para a compreens√£o',
    'Juntos somos mais fortes na jornada do TEA',
    'Compartilhe experi√™ncias no nosso f√≥rum',
    'Registre os progressos no di√°rio',
    'Organize melhor a rotina di√°ria',
    'Aprenda mais sobre comunica√ß√£o alternativa',
    'Descubra estrat√©gias sensoriais efetivas',
    'Conecte-se com outros pais e cuidadores',
    'Acompanhe o desenvolvimento passo a passo',
    'Encontre dicas pr√°ticas para o dia a dia',
    'Personalize as atividades conforme a necessidade',
    'Mantenha-se informado sobre o TEA',
    'Construa uma rede de apoio s√≥lida',
    'Explore diferentes abordagens terap√™uticas',
    'Aprenda sobre integra√ß√£o sensorial',
    'Desenvolva estrat√©gias de autorregula√ß√£o',
    'Fortale√ßa v√≠nculos familiares',
    'Promova a independ√™ncia gradualmente',
    'Celebre a neurodiversidade',
    'Encontre recursos educacionais espec√≠ficos',
    'Aprenda sobre comunica√ß√£o efetiva',
    'Desenvolva habilidades sociais passo a passo',
    'Explore atividades sensoriais ben√©ficas',
    'Construa uma rotina previs√≠vel e segura',
    'Acompanhe marcos do desenvolvimento',
    'Registre comportamentos importantes',
    'Identifique gatilhos e padr√µes',
    'Planeje transi√ß√µes suaves no dia a dia',
    'Desenvolva estrat√©gias de calma',
    'Aprenda sobre alimenta√ß√£o seletiva',
    'Explore t√©cnicas de sono saud√°vel',
    'Encontre suporte profissional especializado',
    'Compartilhe sucessos e desafios',
    'Mantenha um registro de progressos',
    'Adapte o ambiente para maior conforto',
    'Aprenda sobre processamento sensorial',
    'Desenvolva a autonomia com seguran√ßa',
    'Explore interesses espec√≠ficos',
    'Construa pontes de comunica√ß√£o',
    'Fortale√ßa habilidades motoras',
    'Promova intera√ß√µes sociais positivas',
    'Aprenda sobre autorregula√ß√£o emocional',
    'Desenvolva rotinas de autocuidado',
    'Explore recursos visuais de apoio',
    'Construa hist√≥rias sociais personalizadas',
    'Acompanhe o progresso educacional',
    'Registre conquistas importantes',
    'Identifique pontos fortes e talentos',
    'Planeje atividades estruturadas',
    'Desenvolva habilidades de vida di√°ria',
    'Aprenda sobre suporte comportamental',
    'Explore terapias complementares',
    'Encontre estrat√©gias de inclus√£o escolar',
    'Compartilhe momentos especiais',
    'Mantenha a consist√™ncia na rotina',
    'Adapte comunica√ß√£o √†s necessidades',
    'Aprenda sobre desenvolvimento sensorial',
    'Desenvolva habilidades de brincadeira',
    'Explore atividades terap√™uticas em casa',
    'Construa um ambiente de aprendizagem',
    'Fortale√ßa a comunica√ß√£o familiar',
    'Promova independ√™ncia nas atividades',
    'Aprenda sobre gest√£o de ansiedade',
    'Desenvolva estrat√©gias de foco',
    'Explore recursos de tecnologia assistiva',
    'Construa momentos de conex√£o',
    'Acompanhe mudan√ßas de comportamento',
    'Registre estrat√©gias efetivas',
    'Identifique interesses especiais',
    'Planeje atividades sensoriais',
    'Desenvolva habilidades de organiza√ß√£o',
    'Converse com Tina, nossa assistente virtual',
    'Tire suas d√∫vidas sobre TEA',
    'Encontre apoio na nossa comunidade'
  ];

  @override
  void initState() {
    super.initState();
    _loadUserName();
    _setRandomPhrase();
  }
  
  void _setRandomPhrase() {
    final random = Random();
    setState(() {
      _motivationalPhrase = _phrases[random.nextInt(_phrases.length)];
    });
  }

  Future<void> _loadUserName() async {
    try {
      final fullName = await SecureStorageService.getSecureString('user_name') ?? widget.nomeUsuario;
      
      // Pegar apenas o primeiro nome e capitalizar
      final firstName = fullName.split(' ').first;
      final capitalizedName = firstName.isNotEmpty 
          ? firstName[0].toUpperCase() + firstName.substring(1).toLowerCase()
          : widget.nomeUsuario;
      
      setState(() {
        _displayName = capitalizedName;
      });
    } catch (e) {
      setState(() {
        _displayName = widget.nomeUsuario;
      });
    }
  }

  @override
  Widget build(BuildContext context) {
    return Scaffold(
      appBar: AppBar(
        title: const Text('TISM - Guia TEA'),
        backgroundColor: Theme.of(context).brightness == Brightness.dark 
          ? const Color(0xFF1E1E1E) 
          : tismAqua,
        foregroundColor: Colors.white,
        elevation: Theme.of(context).brightness == Brightness.dark ? 0 : 4,
        actions: [],
      ),
      body: SafeArea(
        child: Padding(
          padding: const EdgeInsets.all(16),
          child: Column(
          crossAxisAlignment: CrossAxisAlignment.start,
          children: [
            Text(
              'Ol√°, ${_displayName.isNotEmpty ? _displayName : widget.nomeUsuario}! üëã',
              style: const TextStyle(fontSize: 24, fontWeight: FontWeight.bold),
            ),
            const SizedBox(height: 8),
            Text(
              _motivationalPhrase,
              style: TextStyle(
                fontSize: 16, 
                color: Theme.of(context).brightness == Brightness.dark 
                  ? Colors.grey[300] 
                  : Colors.grey[600]
              ),
            ),
            const SizedBox(height: 32),
            Expanded(
              child: ListView(
                padding: const EdgeInsets.symmetric(vertical: 8),
                children: [
                  _buildMenuCard(
                    context,
                    'Feed Educativo',
                    Icons.article,
                    () => Navigator.push(context, MaterialPageRoute(builder: (context) => const FeedPage())),
                  ),
                  _buildMenuCard(
                    context,
                    'Rotina Personalizada',
                    Icons.schedule,
                    () => Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const RoutineScreen()),
                    ),
                  ),
                  _buildMenuCard(
                    context,
                    'Di√°rio de Observa√ß√µes',
                    Icons.book,
                    () => Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const DiaryScreen()),
                    ),
                  ),
                  _buildMenuCardWithImage(
                    context,
                    'Tina (Chatbot)',
                    'assets/images/tinaSimpleIcon.png',
                    () => Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const ChatScreen()),
                    ),
                  ),
                  _buildMenuCard(
                    context,
                    'F√≥rum TEA',
                    Icons.forum,
                    () => Navigator.push(
                      context,
                      MaterialPageRoute(builder: (context) => const ForumMain()),
                    ),
                  ),

                  _buildMenuCard(
                    context,
                    'Perfil',
                    Icons.person,
                    () => Navigator.push(
                      context,
                      MaterialPageRoute(
                        builder: (context) => ProfilePage(nomeUsuario: widget.nomeUsuario),
                      ),
                    ),
                  ),
                ],
              ),
            ),
          ],
        ),
      ),
      ),
    );
  }

  Widget _buildMenuCard(BuildContext context, String title, IconData icon, VoidCallback onTap) {
    return Container(
      margin: const EdgeInsets.only(bottom: 12),
      child: Card(
        elevation: 4,
        child: InkWell(
          onTap: onTap,
          borderRadius: BorderRadius.circular(8),
          child: Padding(
            padding: const EdgeInsets.all(20),
            child: Row(
              children: [
                Icon(
                  icon, 
                  size: 40, 
                  color: tismAqua,
                ),
                const SizedBox(width: 16),
                Expanded(
                  child: Text(
                    title,
                    style: TextStyle(
                      fontSize: 18, 
                      fontWeight: FontWeight.w500,
                      color: Theme.of(context).brightness == Brightness.dark 
                        ? Colors.white 
                        : Colors.black87
                    ),
                  ),
                ),
                Icon(
                  Icons.arrow_forward_ios,
                  color: Theme.of(context).brightness == Brightness.dark 
                    ? Colors.grey[400] 
                    : Colors.grey[600],
                  size: 16,
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

  Widget _buildMenuCardWithImage(BuildContext context, String title, String imagePath, VoidCallback onTap) {
    return Container(
      margin: const EdgeInsets.only(bottom: 12),
      child: Card(
        elevation: 4,
        child: InkWell(
          onTap: onTap,
          borderRadius: BorderRadius.circular(8),
          child: Padding(
            padding: const EdgeInsets.all(20),
            child: Row(
              children: [
                Image.asset(
                  imagePath,
                  width: 42,
                  height: 42,
                  fit: BoxFit.contain,
                  errorBuilder: (context, error, stackTrace) => 
                    Icon(Icons.chat, size: 42, color: tismAqua),
                ),
                const SizedBox(width: 16),
                Expanded(
                  child: Text(
                    title,
                    style: TextStyle(
                      fontSize: 18, 
                      fontWeight: FontWeight.w500,
                      color: Theme.of(context).brightness == Brightness.dark 
                        ? Colors.white 
                        : Colors.black87
                    ),
                  ),
                ),
                Icon(
                  Icons.arrow_forward_ios,
                  color: Theme.of(context).brightness == Brightness.dark 
                    ? Colors.grey[400] 
                    : Colors.grey[600],
                  size: 16,
                ),
              ],
            ),
          ),
        ),
      ),
    );
  }

}
